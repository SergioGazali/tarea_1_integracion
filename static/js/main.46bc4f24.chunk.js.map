{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","stateValue","setState","useEffect","fetch","then","response","json","data","breakingBad","betterCallSaul","map","episode","index","series","season","push","processData","result","className","src","logo","alt","Object","keys","BreakingBad","BetterCallSaul","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,MAA0B,iC,eC8E1BA,MAjDf,WAAgB,IAAD,EACkBC,mBAAS,CAAC,YAAe,GAAI,eAAkB,KADjE,mBACNC,EADM,KACMC,EADN,KAWb,OATAC,qBAAU,WAERC,MAAM,2DACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAI,OAhCI,SAACA,GACnB,IAAIC,EAAc,GACdC,EAAiB,GAoBrB,OAnBAF,EAAKG,KAAI,SAACC,EAASC,GACM,iBAAnBD,EAAQE,QACNF,EAAQG,UAAUN,IAGpBA,EAAYG,EAAQG,QAAU,IAF9BN,EAAYG,EAAQG,QAAQC,KAAKJ,KAO/BA,EAAQG,UAAUL,IAGpBA,EAAeE,EAAQG,QAAU,IAFjCL,EAAeE,EAAQG,QAAQC,KAAKJ,OAO3B,CAAC,YAAeH,EAAa,eAAkBC,GAW5CO,CAAYT,MACzBH,MAAK,SAAAa,GAAM,OAAIhB,EAASgB,QAE1B,IAED,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,4DAGA,sBAAKH,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UACE,8CACA,6BACGI,OAAOC,KAAKvB,EAAWwB,aAAad,KAAI,SAACI,EAAQF,GAAT,OACvC,yCAAwBE,IAAfF,WAIf,sBAAKM,UAAU,eAAf,UACE,kDACA,6BACGI,OAAOC,KAAKvB,EAAWyB,gBAAgBf,KAAI,SAACI,EAAQF,GAAT,OAC1C,yCAAwBE,IAAfF,cAKjB,mBACEM,UAAU,WACVQ,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCrDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.46bc4f24.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nconst processData = (data) => {\n  var breakingBad = [];\n  var betterCallSaul = [];\n  data.map((episode, index) => {\n    if (episode.series === \"Breaking Bad\") {\n      if (episode.season in breakingBad) {\n        breakingBad[episode.season].push(episode);\n      } else {\n        breakingBad[episode.season] = [];\n        breakingBad[episode.season].push(episode);\n      }\n    }\n    else {\n      if (episode.season in betterCallSaul) {\n        betterCallSaul[episode.season].push(episode);\n      } else {\n        betterCallSaul[episode.season] = [];\n        betterCallSaul[episode.season].push(episode);\n      }\n    }\n  })\n  const result = {\"BreakingBad\": breakingBad, \"BetterCallSaul\": betterCallSaul};\n  return result;\n}\n\nfunction App() {\n  const [stateValue, setState] = useState({\"BreakingBad\": {}, \"BetterCallSaul\": {}});\n  useEffect(() => {\n    // send HTTP request\n    fetch(\"https://tarea-1-breaking-bad.herokuapp.com/api/episodes\")\n      .then(response => response.json())\n      //.then(data => console.log(data));\n      .then(data => processData(data))\n      .then(result => setState(result));\n    // save response to variable\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Esta es la tarea de Sergio.\n        </p>\n        <div className=\"seasonsFlex\">\n          <div className=\"seriesColumn\">\n            <h2>Breaking Bad</h2>\n            <ul>\n              {Object.keys(stateValue.BreakingBad).map((season, index) => (\n                <li key={index}>Season {season}</li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"seriesColumn\">\n            <h2>Better Call Saul</h2>\n            <ul>\n              {Object.keys(stateValue.BetterCallSaul).map((season, index) => (\n                <li key={index}>Season {season}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}